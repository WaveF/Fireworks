/* ===========================================================================
	
	File: L - Copy Visible to Next Doc

	Author - John Dunning
	Copyright - 2009 John Dunning.  All rights reserved.
	Email - fw@johndunning.com
	Website - http://johndunning.com/fireworks

	Release - 1.1.1 ($Revision: 1.3 $)
	Last update - $Date: 2009/02/22 23:30:04 $

   ======================================================================== */


/* ===========================================================================
	To do:
		- if there's text on the clipboard from another app when this command
			is run, the text is pasted into the next doc
		
		* copy the contents of each layer on each frame
		* set the sharing attribute in the target doc appropriately
		
		- rearranging elements in sublayers is ridiculously twitchy
			only way to put an element at the end of a layer with sublayers
				is to close the last sublayer
				
		- doesn't look like there's a way to tell where the sublayers are in
			relation to other elements in the layer 
			
		- insert frame copy doesn't work because duplicate frame doesn't work
			doesn't work when there's just one frame
			but duplicating it, then duplicating it again, seems to work the second time
				but then you can't delete the first duplicated frame
				the sublayer B1 text element is visible but isn't selectable 
				
		- calling getLayers from the console kills FW immediately
		
		- local variables are stored as attributes on the function object
			so local variable overwrites attribute of same name
			
		- why aren't sublayers created across all frames?
			empty laeyrs are, so sublayers should be, too 

   =========================================================================== */


// ===========================================================================
//  Main
// ===========================================================================


try {

(function()
{
	if (fw.documents.length < 2) {
		alert("This command copies the current layer to the next document. It requires that at least 2 documents be open at the same time.");

		return;
	}

	if (typeof dojo == "undefined") { fw.runScript(fw.currentScriptDir + "/lib/lib.js"); }
	dojo.require("fwlib.layers");
	
	var dom	= fw.getDocumentDOM();

		// store the current selection so we can restore it when we're done
	var originalSelection = [].concat(fw.selection);
	
		// find the next open document
	var targetDoc = fwlib.layers.getNextDocument(dom);

	if (!targetDoc) {
			// for some reason, we couldn't find another unique document
		return;
	}

	var tree = new fwlib.layers.LayerTree();
	var topLayers = tree.getTopLayers();

	for (i = 0; i < topLayers.length; i++) {
			// only copy visible layers
		if (topLayers[i].isVisible()) {
			fwlib.layers.copyLayer(topLayers[i], targetDoc);
		}
	}
	
		// force the target doc to update.  otherwise, the pasted objects won't 
		// be visible until the user switches to that doc.
	targetDoc.redraw();

		// restore the selection in the source doc
	fw.selection = originalSelection;
})();

} catch (exception) {
	alert([exception, exception.lineNumber, exception.fileName].join("\n"));
}
